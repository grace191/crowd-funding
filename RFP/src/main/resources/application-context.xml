<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   					   http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	   					   http://www.springframework.org/schema/context
       					   http://www.springframework.org/schema/context/spring-context-4.1.xsd	
       					   http://www.springframework.org/schema/util 
       					   http://www.springframework.org/schema/util/spring-util-4.1.xsd   
       					   http://www.springframework.org/schema/jdbc 
       					   http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd 			   
	   					   http://www.springframework.org/schema/aop 
						   http://www.springframework.org/schema/aop/spring-aop-4.1.xsd	
						   http://www.springframework.org/schema/task 
						   http://www.springframework.org/schema/task/spring-task-4.1.xsd							   
						   ">

	<context:property-placeholder location="classpath:util.properties" />
	<context:annotation-config />
	<context:component-scan base-package="com.incubator.springmvc.*" />
<!-- 	<context:component-scan base-package="com.incubator.springmvc.*" />
 -->
	<!-- constructor injection -->
	<!-- <bean id="postManager" class="spring.mvc.dependency.injection.PostManager" 
		scope="singleton"> <constructor-arg name="postService" ref="postService"/> 
		<constructor-arg name="enableService" value="true"/> </bean> -->


	<!-- XML Bean Definitions -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClass}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- initialize Embedded DataSource -->
	<!-- <jdbc:initialize-database data-source="dataSource"> <jdbc:script location="classpath:dbschema.sql" 
		/> <jdbc:script location="classpath:test-data.sql" /> </jdbc:initialize-database> -->


	<!-- JPA Persistence Context and EntityManager configuration -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="packagesToScan" value="spring.mvc.bean" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="true" />
				<property name="showSql" value="true" />
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>

	<!-- Automatic Transaction Participation -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- @Scheduled task configuration -->
	<!-- uncomment<bean id="scheduleTask" class="spring.mvc.schedule.ScheduleTask"/> -->

	<!-- REST template configuration -->
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate" />

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- Java Mail Configuration -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="username" value="${java.mail.username}" />
		<property name="password" value="${java.mail.password}" />
		<property name="port" value="465" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtp.starttls.required">true</prop>
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
				<prop key="mail.smtp.host">${java.mail.host}</prop>
			</props>
		</property>
	</bean>

	<!-- Velocity Email Template Config Bean -->
	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="resourceLoaderPath" value="/WEB-INF/email-templates/" />
	</bean>

	<!-- <bean id="sampleBean" class="spring.mvc.bean.SampleBean"> <property 
		name="sampleId" value="4"></property> <property name="sampleText" value="sampletext"></property> 
		</bean> -->


	<!-- <bean id="accountDao" class="com.incubator.springmvc.dao.ContactDAOImpl"> 
		<constructor-arg ref="dataSource" /> </bean> <bean id="projectDAO" class="com.incubator.springmvc.dao.ProjectDAOImpl"> 
		<constructor-arg ref="dataSource" /> </bean> <bean id="customUserDetailsService" 
		class="com.incubator.springmvc.service.CustomUserDetailsService"> <property 
		name="accountDao" ref="accountDao"></property> <property name="projectDAO" 
		ref="projectDAO"></property> </bean> -->
</beans>
          